services:

  # PostgreSQL Database для обмена данными между блоками
  postgres_hr:
    image: postgres:15-alpine
    container_name: hr_postgres
    environment:
      POSTGRES_DB: hr_system
      POSTGRES_USER: hr_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-hr_secure_password_2024}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=ru_RU.UTF-8 --lc-ctype=ru_RU.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_hr_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
      - ./database/backups:/backups
    networks:
      - hr_network
      # - kafka_secure_net  # Временно отключено для тестирования
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hr_user -d hr_system"]
      interval: 10s
      timeout: 5s
      retries: 5

  cv_ui:
    build:
      context: ./services/cv-ui
      dockerfile: Dockerfile.ui
    env_file:
      - .env
    ports:
      - "8503:8503"
    networks:
      - ocr_network
      # - kafka_secure_net  # Временно отключено для тестирования
      - hr_network
    depends_on:
      - postgres_hr
    restart: unless-stopped

  kafka_rest_producer:
    build:
      context: ./services/kafka-rest-producer
      dockerfile: Dockerfile
    ports:
      - "8090:8090"
    environment:
      - JAVA_OPTS=-Xms128m -Xmx256m
      - APP_KAFKA_BOOTSTRAP_SERVERS=kafka1:19092,kafka2:19093,kafka3:19094
    networks:
      - ocr_network
      # - kafka_secure_net  # Временно отключено для тестирования
    restart: unless-stopped

  # Блок 4: Анализатор отчетов о кандидатах
  report_analyzer:
    build:
      context: ./services/report-analyzer
      dockerfile: Dockerfile
    env_file:
      - .env
    environment:
      - LLM_ENABLED=true
    ports:
      - "8504:8504"
    networks:
      - hr_network
    depends_on:
      - postgres_hr
    restart: unless-stopped

  speakalka:
    build:
      context: ./services/Speakalka
      dockerfile: Dockerfile
    container_name: speakalka-interview
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - KAFKA_BOOTSTRAP_SERVERS=kafka1:19092,kafka2:19093,kafka3:19094
      - KAFKA_TOPIC=step3
    ports:
      - "8000:8000"
    volumes:
      - ./services/Speakalka/logs:/app/logs
      - ./services/Speakalka/recordings:/app/recordings
      - ./services/Speakalka/static:/app/static
      - ./services/Speakalka/interview_system/interview_config.json:/app/interview_config.json:ro
    depends_on:
      - kafka_rest_producer
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - kafka_secure_net
      - hr_network
    restart: unless-stopped

  nginx_https:
    image: nginx:alpine
    container_name: nginx_https
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-https/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-https/certs:/etc/nginx/certs:ro
      - "./cv data:/srv/cv-data:ro"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - hr_network
    restart: unless-stopped

networks:
  ocr_network:
    external: true
    name: ocr_network
  # kafka_secure_net:  # Временно отключено для тестирования
  #   external: true
  #   name: kafka-secure_default
  hr_network:
    driver: bridge
    name: hr_network

volumes:
  postgres_hr_data:
    driver: local
    name: hr_postgres_data

#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–Ω–∞—Ç—ã –∏–Ω—Ç–µ—Ä–≤—å—é —á–µ—Ä–µ–∑ Kafka

echo "üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–Ω–∞—Ç—ã –∏–Ω—Ç–µ—Ä–≤—å—é —á–µ—Ä–µ–∑ Kafka..."

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd "$(dirname "$0")"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞..."
if ! curl -s http://localhost:8000/ > /dev/null 2>&1; then
    echo "‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω!"
    echo ""
    echo "üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥–æ–π:"
    echo "   docker-compose up -d"
    echo ""
    echo "–ò–ª–∏ –≤—Ä—É—á–Ω—É—é:"
    echo "   source venv/bin/activate"
    echo "   python start_server.py"
    exit 1
fi

echo "‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç"

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π candidate ID
CANDIDATE_ID="cv_$(date +%s)_$((RANDOM % 9000 + 1000))"
CANDIDATE_NAME="–¢–µ—Å—Ç–æ–≤—ã–π –ö–∞–Ω–¥–∏–¥–∞—Ç"
VACANCY_TITLE="–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫"

echo "üìù –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Kafka —Ç–æ–ø–∏–∫ step1..."
echo "üë§ –ö–∞–Ω–¥–∏–¥–∞—Ç: $CANDIDATE_NAME"
echo "üÜî Candidate ID: $CANDIDATE_ID"
echo "üíº –í–∞–∫–∞–Ω—Å–∏—è: $VACANCY_TITLE"

# –°–æ–∑–¥–∞–µ–º Python —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Kafka
cat > /tmp/send_kafka_message.py << 'EOF'
#!/usr/bin/env python3
import json
import sys
from kafka import KafkaProducer

def send_message():
    # –î–∞–Ω–Ω—ã–µ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    candidate_id = sys.argv[1]
    candidate_name = sys.argv[2]
    vacancy_title = sys.argv[3]
    
    # –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    message = {
        "candidateId": candidate_id,
        "requestId": f"req_{candidate_id}",
        "vacancyTitle": vacancy_title,
        "vacancy": f"–û–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏: {vacancy_title}",
        "candidateName": candidate_name,
        "cvText": f"–†–µ–∑—é–º–µ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞: {candidate_name}",
        "suitabilityConclusion": "–í—ã—Å–æ–∫–∞—è –ø—Ä–∏–≥–æ–¥–Ω–æ—Å—Ç—å",
        "score": 8,
        "email": "test@example.com",
        "preferredContact": "üìß test@example.com",
        "questionsForApplicant": [
            "–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–º –æ–ø—ã—Ç–µ —Ä–∞–±–æ—Ç—ã",
            "–ö–∞–∫–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ?",
            "–ü–æ—á–µ–º—É –≤—ã —Ö–æ—Ç–∏—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –Ω–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏?",
            "–ö–∞–∫–∏–µ —É –≤–∞—Å –ø–ª–∞–Ω—ã –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ?",
            "–ì–æ—Ç–æ–≤—ã –ª–∏ –≤—ã –∫ —É–¥–∞–ª–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ?"
        ]
    }
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Kafka
    bootstrap_servers = ["kafka1:19092", "kafka2:19093", "kafka3:19094"]
    topic = "step1"
    
    try:
        # –°–æ–∑–¥–∞–µ–º producer
        producer = KafkaProducer(
            bootstrap_servers=bootstrap_servers,
            value_serializer=lambda v: json.dumps(v, ensure_ascii=False).encode('utf-8'),
            key_serializer=lambda k: k.encode('utf-8') if k else None,
            acks='all',
            retries=3
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        future = producer.send(
            topic,
            value=message,
            key=candidate_id
        )
        
        # –ñ–¥–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        record_metadata = future.get(timeout=10)
        
        print(f"SUCCESS:{record_metadata.partition}:{record_metadata.offset}")
        producer.close()
        
    except Exception as e:
        print(f"ERROR:{str(e)}")
        sys.exit(1)

if __name__ == "__main__":
    send_message()
EOF

# –ó–∞–ø—É—Å–∫–∞–µ–º Python —Å–∫—Ä–∏–ø—Ç —á–µ—Ä–µ–∑ Docker
RESULT=$(docker exec speakalka-interview python3 /tmp/send_kafka_message.py "$CANDIDATE_ID" "$CANDIDATE_NAME" "$VACANCY_TITLE" 2>&1)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
if echo "$RESULT" | grep -q "SUCCESS:"; then
    echo "‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Kafka —É—Å–ø–µ—à–Ω–æ!"
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º partition –∏ offset
    PARTITION=$(echo "$RESULT" | cut -d':' -f2)
    OFFSET=$(echo "$RESULT" | cut -d':' -f3)
    
    echo "üìä Partition: $PARTITION, Offset: $OFFSET"
    echo ""
    echo "üè† Candidate ID: $CANDIDATE_ID"
    echo "üåê –í–µ–±-URL: http://localhost:8000/room/$CANDIDATE_ID"
    echo ""
    echo "üìã –û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:"
    echo "   http://localhost:8000/room/$CANDIDATE_ID"
    echo ""
    
    # –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
    if command -v open >/dev/null 2>&1; then
        echo "üí° –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ? (y/n): "
        read -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            open "http://localhost:8000/room/$CANDIDATE_ID"
        fi
    fi
    
    echo ""
    echo "üéØ –ö–æ–º–Ω–∞—Ç–∞ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è!"
    echo "üìä –î–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ª–æ–≥–æ–≤: docker logs -f speakalka-interview"
    
else
    echo "‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Kafka:"
    echo "$RESPONSE"
    echo ""
    echo "üí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
    echo "   - Kafka –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    echo "   - –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é Docker"
    echo "   - –¢–æ–ø–∏–∫ step1 –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    echo ""
    echo "üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å Kafka:"
    echo "   docker ps | grep kafka"
    echo "   docker logs speakalka-interview"
    exit 1
fi

# –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
rm -f /tmp/send_kafka_message.py
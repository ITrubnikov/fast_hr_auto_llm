services:
  triton-server:
    image: nvcr.io/nvidia/tritonserver:25.07-py3
    # platform: linux/amd64
    ports:
      - "18000:8000"
      - "18001:8001"
      - "18002:8002"
    volumes:
      - ./triton_model_repository:/models:ro
    command: >
      tritonserver
      --model-repository=/models
      --strict-model-config=false
      --log-verbose=1
      --allow-http=true
      --allow-grpc=true
      --allow-metrics=true
      --backend-config=onnxruntime,enable-cpu-optimization=true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/v2/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

#   prometheus:
#     image: prom/prometheus:latest
#     platform: linux/amd64
#     ports:
#       - "9090:9090"
#     volumes:
#       - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
#     command:
#       - '--config.file=/etc/prometheus/prometheus.yml'
#       - '--storage.tsdb.path=/prometheus'
#       - '--web.console.libraries=/etc/prometheus/console_libraries'
#       - '--web.console.templates=/etc/prometheus/consoles'
#       - '--web.enable-lifecycle'
#     profiles:
#       - monitoring
#     depends_on:
#       - triton-server

#   grafana:
#     image: grafana/grafana:latest
#     platform: linux/amd64
#     ports:
#       - "3000:3000"
#     environment:
#       - GF_SECURITY_ADMIN_PASSWORD=admin
#     volumes:
#       - grafana-storage:/var/lib/grafana
#     profiles:
#       - monitoring
#     depends_on:
#       - prometheus

# volumes:
#   grafana-storage:
